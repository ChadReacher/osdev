Plans for working on OS:
* Networking:
 - TCP/IP stack:

   - [DONE] Physical layer:		RTL8139 driver
     - [DONE] Introduce macros for registers names and bit names; 
     - [DONE] Test transmitting frames

   - [DONE] Link layer:		Ethernet(DONE), ARP(DONE)
     sudo sh -c 'echo test_ether | xxd -r -p | socat - INTERFACE:tap0'
     - [DONE] Remove malloc() calls, use stack memory;

   - Internet layer:		IPv4, ICMP
     ping -c 1 -s 3100 192.168.0.116
     [DONE] What if the IP address from the other network subnet?
     Add timeout support? (Revise the timer implementation?)

   - Transport layer:		UDP, TCP
     UDP server: nc -l -u 192.168.0.115 -p 2002
     UDP client: echo 'Sky is blue' | nc -u 192.168.0.115 3232

   - Application layer:		DHCP, DNS, HTTP
 - Network sockets (POSIX)
 - Userspace 'ping' utility
 - HTTP server
 - HTTP client

* Implement second file system
* Implement virtual file system
* Introduce mount, umount system calls
* Also implement pipe, fifo
* Add bootinfo structure and pass it from bootloader to kernel
* Threads
* timer events
* Should we move the heap beginning right after the kernel end (do it via linker symbols)?
ADD mkdir -p build directory to Makefile 
Prepare .gdbinit:
  * echo "set auto-load safe-path /" >> ~/.gdbinit
